generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int            @id @default(autoincrement())
  username      String         @unique @db.VarChar(255)
  password      String         @db.VarChar(255)
  email         String?        @unique @db.VarChar(255)
  role          String?        @db.VarChar(255)
  posts         post[]
  comment       comment[]
  followers     follows[]      @relation("following")
  following     follows[]      @relation("follower")
  conversations conversation[]
  messages      message[]
}

model follows {
  follower    users @relation("follower", fields: [followerId], references: [id], onDelete: Cascade)
  followerId  Int
  following   users @relation("following", fields: [followingId], references: [id], onDelete: Cascade)
  followingId Int

  @@id([followerId, followingId])
}

model post {
  id        Int       @id @default(autoincrement())
  caption   String    @db.Text
  userid    Int       @db.Int
  imageUrl  String?   @db.Text
  createdBy users     @relation(fields: [userid], references: [id])
  comments  comment[]
}

model comment {
  id     Int    @id @default(autoincrement())
  body   String @db.Text
  userid Int    @db.Int
  postid Int    @db.Int
  author users  @relation(fields: [userid], references: [id])
  post   post   @relation(fields: [postid], references: [id])
}

model conversation {
  id        Int       @id @default(autoincrement())
  users     users[]
  messages  message[]
  createdAt DateTime  @default(now())
}

model message {
  id             Int          @id @default(autoincrement())
  content        String       @db.Text
  senderId       Int
  conversationId Int
  sender         users        @relation(fields: [senderId], references: [id])
  conversation   conversation @relation(fields: [conversationId], references: [id])
  createdAt      DateTime     @default(now())
}
